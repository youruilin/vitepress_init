import{_ as a,c as t,o as n,ag as e}from"./chunks/framework.BEBfhJSu.js";const p="/vitepress_init/assets/image-uniapp_picture_1.3c2GtlqD.png",l="/vitepress_init/assets/image-uniapp_picture_2.BFPUrwtw.png",h="/vitepress_init/assets/image-uniapp_picture_3.CJD7ezli.png",o="/vitepress_init/assets/image-uniapp_picture_4.BPHL-Qez.png",r="/vitepress_init/assets/image-uniapp_picture_5.Cl16FAKw.png",d="/vitepress_init/assets/image-uniapp_picture_6.s59I1Oh4.png",i="/vitepress_init/assets/image-uniapp_picture_7.Dn1XL1vj.png",k="/vitepress_init/assets/image-uniapp_picture_8.wEezderN.png",b=JSON.parse('{"title":"uniapp 基础","description":"","frontmatter":{},"headers":[],"relativePath":"articles/01-项目创建/03-uniapp/01-概述.md","filePath":"articles/01-项目创建/03-uniapp/01-概述.md"}'),u={name:"articles/01-项目创建/03-uniapp/01-概述.md"};function c(g,s,E,y,F,m){return n(),t("div",null,s[0]||(s[0]=[e('<h1 id="uniapp-基础" tabindex="-1">uniapp 基础 <a class="header-anchor" href="#uniapp-基础" aria-label="Permalink to &quot;uniapp 基础&quot;">​</a></h1><h2 id="uni-app-和原生小程序开发区别" tabindex="-1">uni-app 和原生小程序开发区别 <a class="header-anchor" href="#uni-app-和原生小程序开发区别" aria-label="Permalink to &quot;uni-app 和原生小程序开发区别&quot;">​</a></h2><h3 id="开发区别" tabindex="-1">开发区别 <a class="header-anchor" href="#开发区别" aria-label="Permalink to &quot;开发区别&quot;">​</a></h3><p>uni-app 项目每个页面是一个 <code>.vue</code> 文件，数据绑定及事件处理同 <code>Vue.js</code> 规范：</p><ol><li><p>属性绑定 <code>src=&quot;{ { url }}&quot;</code> 升级成 <code>:src=&quot;url&quot;</code></p></li><li><p>事件绑定 <code>bindtap=&quot;eventName&quot;</code> 升级成 <code>@tap=&quot;eventName&quot;</code>，<strong>支持（）传参</strong></p></li><li><p>支持 Vue 常用<strong>指令</strong> <code>v-for</code>、<code>v-if</code>、<code>v-show</code>、<code>v-model</code> 等</p></li></ol><h3 id="其他区别补充" tabindex="-1">其他区别补充 <a class="header-anchor" href="#其他区别补充" aria-label="Permalink to &quot;其他区别补充&quot;">​</a></h3><ol><li>调用接口能力，<strong>建议前缀</strong> <code>wx</code> 替换为 <code>uni</code> ，养成好习惯，<strong>支持多端开发</strong>。</li><li><code>&lt;style&gt;</code> 页面样式不需要写 <code>scoped</code>，小程序是多页面应用，<strong>页面样式自动隔离</strong>。</li><li><strong>生命周期分三部分</strong>：应用生命周期(小程序)，页面生命周期(小程序)，组件生命周期(Vue)</li></ol><h2 id="创建-uni-app-项目方式" tabindex="-1">创建 uni-app 项目方式 <a class="header-anchor" href="#创建-uni-app-项目方式" aria-label="Permalink to &quot;创建 uni-app 项目方式&quot;">​</a></h2><p><strong>uni-app 支持两种方式创建项目：</strong></p><ol><li><p>通过 HBuilderX 创建（需安装 HBuilderX 编辑器）</p></li><li><p>通过命令行创建（需安装 NodeJS 环境）</p></li></ol><h3 id="hbuilderx-创建-uni-app-项目" tabindex="-1">HBuilderX 创建 uni-app 项目 <a class="header-anchor" href="#hbuilderx-创建-uni-app-项目" aria-label="Permalink to &quot;HBuilderX 创建 uni-app 项目&quot;">​</a></h3><p><strong>1.下载安装 HbuilderX 编辑器</strong></p><p><img src="'+p+'" alt="下载安装 HbuilderX 编辑器"></p><p><strong>2.通过 HbuilderX 创建 uni-app vue3 项目</strong></p><p><img src="'+l+'" alt="通过 HbuilderX 创建 uni-app vue3 项目"></p><p><strong>3.安装 uni-app vue3 编译器插件</strong></p><p><img src="'+h+'" alt="安装 uni-app vue3 编译器插件"></p><p><strong>4.编译成微信小程序端代码</strong></p><p><img src="'+o+'" alt="编译成微信小程序端代码"></p><p><strong>5.开启服务端口</strong></p><p><img src="'+r+'" alt="开启服务端口"></p><p><strong>小技巧分享：模拟器窗口分离和置顶</strong></p><p><img src="'+d+'" alt="模拟器窗口分离和置顶"></p><p><strong>HBuildeX 和 微信开发者工具 关系</strong></p><p><img src="'+i+`" alt="HBuildeX 和 微信开发者工具 关系"></p><div class="tip custom-block"><p class="custom-block-title">温馨提示</p><p><a href="https://www.dcloud.io/hbuilderx.html" target="_blank" rel="noreferrer">HBuildeX</a> 和 <a href="https://uniapp.dcloud.net.cn/" target="_blank" rel="noreferrer">uni-app</a> 都属于 <a href="https://dcloud.io" target="_blank" rel="noreferrer">DCloud</a> 公司的产品。</p></div><h3 id="命令行创建-uni-app-项目" tabindex="-1">命令行创建 uni-app 项目 <a class="header-anchor" href="#命令行创建-uni-app-项目" aria-label="Permalink to &quot;命令行创建 uni-app 项目&quot;">​</a></h3><p><strong>优势</strong></p><p>通过命令行创建 uni-app 项目，<strong>不必依赖 HBuilderX</strong>，TypeScript 类型支持友好。</p><p><strong>命令行创建</strong> <strong>uni-app</strong> <strong>项目：</strong></p><p>vue3 + ts 版</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-2MvMN" id="tab-ZeYo4A4" checked><label data-title="github" for="tab-ZeYo4A4">github</label><input type="radio" name="group-2MvMN" id="tab-m62iai8"><label data-title="👉国内 gitee" for="tab-m62iai8">👉国内 gitee</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过 npx 从 github 下载</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> degit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dcloudio/uni-preset-vue#vite-ts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 项目名称</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过 git 从 gitee 克隆下载 (👉备用地址)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite-ts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://gitee.com/dcloud/uni-preset-vue.git</span></span></code></pre></div></div></div><p>创建其他版本可查看：<a href="https://uniapp.dcloud.net.cn/quickstart-cli.html" target="_blank" rel="noreferrer">uni-app 官网</a></p><div class="danger custom-block"><p class="custom-block-title">常见问题</p><ul><li>运行 <code>npx</code> 命令下载失败，请尝试换成<strong>手机热点重试</strong></li><li>换手机热点依旧失败，请尝试从<a href="https://gitee.com/dcloud/uni-preset-vue/tree/vite-ts/" target="_blank" rel="noreferrer">国内备用地址下载</a></li><li>在 <code>manifest.json</code> 文件添加 <a href="https://mp.weixin.qq.com/" target="_blank" rel="noreferrer">小程序 AppID</a> 用于真机预览</li><li>运行 <code>npx</code> 命令需依赖 NodeJS 环境，<a href="https://nodejs.org/zh-cn" target="_blank" rel="noreferrer">NodeJS 下载地址</a></li><li>运行 <code>git</code> 命令需依赖 Git 环境，<a href="https://git-scm.com/download/" target="_blank" rel="noreferrer">Git 下载地址</a></li></ul></div><h3 id="使用命令行编译和运行-uni-app-项目" tabindex="-1">使用命令行编译和运行 uni-app 项目 <a class="header-anchor" href="#使用命令行编译和运行-uni-app-项目" aria-label="Permalink to &quot;使用命令行编译和运行 uni-app 项目&quot;">​</a></h3><ol><li>安装依赖 <code>pnpm install</code></li><li>编译成微信小程序 <code>pnpm dev:mp-weixin</code></li><li>导入微信开发者工具</li></ol><div class="tip custom-block"><p class="custom-block-title">温馨提示</p><p>编译成 H5 端可运行 <code>pnpm dev:h5</code> 通过浏览器预览项目。</p></div><h2 id="用-vs-code-开发-uni-app-项目" tabindex="-1">用 VS Code 开发 uni-app 项目 <a class="header-anchor" href="#用-vs-code-开发-uni-app-项目" aria-label="Permalink to &quot;用 VS Code 开发 uni-app 项目&quot;">​</a></h2><h3 id="为什么选择-vs-code" tabindex="-1">为什么选择 VS Code？ <a class="header-anchor" href="#为什么选择-vs-code" aria-label="Permalink to &quot;为什么选择 VS Code？&quot;">​</a></h3><ul><li>VS Code 对 <strong>TS 类型支持友好</strong>，前端开发者<strong>主流的编辑器</strong></li><li>HbuilderX 对 TS 类型支持暂不完善，期待官方完善 👀</li></ul><h3 id="用-vs-code-开发配置" tabindex="-1">用 VS Code 开发配置 <a class="header-anchor" href="#用-vs-code-开发配置" aria-label="Permalink to &quot;用 VS Code 开发配置&quot;">​</a></h3><ul><li>👉 前置工作：安装 Vue3 插件，<a href="https://cn.vuejs.org/guide/typescript/overview.html#ide-support" target="_blank" rel="noreferrer">点击查看官方文档</a><ul><li>安装 <strong>Vue Language Features (Volar)</strong> ：Vue3 语法提示插件</li><li>安装 <strong>TypeScript Vue Plugin (Volar)</strong> ：Vue3+TS 插件</li><li><strong>工作区禁用</strong> Vue2 的 Vetur 插件(Vue3 插件和 Vue2 冲突)</li><li><strong>工作区禁用</strong> @builtin typescript 插件（禁用后开启 Vue3 的 TS 托管模式）</li></ul></li><li>👉 安装 uni-app 开发插件 <ul><li><strong>uni-create-view</strong> ：快速创建 uni-app 页面</li><li><strong>uni-helper uni-app</strong> ：代码提示</li><li><strong>uniapp 小程序扩展</strong> ：鼠标悬停查文档</li></ul></li><li>👉 TS 类型校验 <ul><li>安装 <strong>类型声明文件</strong> <code>pnpm i -D miniprogram-api-typings @uni-helper/uni-app-types</code></li><li>配置 <code>tsconfig.json</code></li></ul></li><li>👉 JSON 注释问题 <ul><li>设置文件关联，把 <code>manifest.json</code> 和 <code>pages.json</code> 设置为 <code>jsonc</code></li></ul></li></ul><p><code>tsconfig.json</code> 参考</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// tsconfig.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@vue/tsconfig/tsconfig.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;compilerOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;sourceMap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;baseUrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;paths&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;@/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./src/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;lib&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;esnext&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 类型声明文件</span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;types&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;@dcloudio/types&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// uni-app API 类型</span></span>
<span class="line highlighted"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;miniprogram-api-typings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 原生微信小程序类型</span></span>
<span class="line highlighted"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;@uni-helper/uni-app-types&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // uni-app 组件类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // vue 编译器类型，校验标签类型</span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;vueCompilerOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 原配置 \`experimentalRuntimeMode\` 现调整为 \`nativeTags\`</span></span>
<span class="line highlighted diff add"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;nativeTags&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;block&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;component&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;template&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;slot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span></span>
<span class="line highlighted diff remove"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;experimentalRuntimeMode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;runtime-uni-app&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;include&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/**/*.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/**/*.d.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/**/*.tsx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/**/*.vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>工作区设置参考</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .vscode/settings.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 在保存时格式化文件</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;editor.formatOnSave&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 文件格式化配置</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;[json]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;editor.defaultFormatter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;esbenp.prettier-vscode&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 配置语言的文件关联</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;files.associations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;pages.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jsonc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// pages.json 可以写注释</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;manifest.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jsonc&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // manifest.json 可以写注释</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">版本升级</p><ul><li>原依赖 <code>@types/wechat-miniprogram</code> 现调整为 <a href="https://github.com/wechat-miniprogram/api-typings" target="_blank" rel="noreferrer">miniprogram-api-typings</a>。</li><li>原配置 <code>experimentalRuntimeMode</code> 现调整为 <code>nativeTags</code>。</li></ul></div><h2 id="代码风格" tabindex="-1">代码风格 <a class="header-anchor" href="#代码风格" aria-label="Permalink to &quot;代码风格&quot;">​</a></h2><p>这一步处理很关键，否则 TS 项目无法校验组件属性类型。</p><h2 id="开发工具回顾" tabindex="-1">开发工具回顾 <a class="header-anchor" href="#开发工具回顾" aria-label="Permalink to &quot;开发工具回顾&quot;">​</a></h2><p>选择自己习惯的编辑器开发 uni-app 项目即可。</p><p><strong>HbuilderX 和 微信开发者工具 关系</strong><img src="`+i+'" alt="HbuilderX 和 微信开发者工具 关系"></p><p><strong>VS Code 和 微信开发者工具 关系</strong><img src="'+k+'" alt="VS Code 和 微信开发者工具 关系"></p><h2 id="用-vs-code-开发课后练习" tabindex="-1">用 VS Code 开发课后练习 <a class="header-anchor" href="#用-vs-code-开发课后练习" aria-label="Permalink to &quot;用 VS Code 开发课后练习&quot;">​</a></h2><p>使用 <code>VS Code</code> 编辑器写代码，实现 tabBar 案例 + 轮播图案例。</p><div class="tip custom-block"><p class="custom-block-title">温馨提示</p><p><code>VS Code</code> 可通过快捷键 <code>Ctrl + i</code> 唤起代码提示。</p></div>',56)]))}const C=a(u,[["render",c]]);export{b as __pageData,C as default};
